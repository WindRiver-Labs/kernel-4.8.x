What:		/sys/bus/platform/devices/.../driver_override
Date:		April 2014
Contact:	Kim Phillips <kim.phillips@freescale.com>
Description:
		This file allows the driver for a device to be specified which
		will override standard OF, ACPI, ID table, and name matching.
		When specified, only a driver with a name matching the value
		written to driver_override will have an opportunity to bind
		to the device.  The override is specified by writing a string
		to the driver_override file (echo vfio-platform > \
		driver_override) and may be cleared with an empty string
		(echo > driver_override).  This returns the device to standard
		matching rules binding.  Writing to driver_override does not
		automatically unbind the device from its current driver or make
		any attempt to automatically load the specified driver.  If no
		driver with a matching name is currently loaded in the kernel,
		the device will not bind to any driver.  This also allows
		devices to opt-out of driver binding using a driver_override
		name such as "none".  Only a single driver may be specified in
		the override, there is no support for parsing delimiters.

What:		/sys/bus/platform/devices/.../portmux.N/name
		/sys/bus/platform/devices/.../portmux.N/state
Date:		April 2016
Contact:	Lu Baolu <baolu.lu@linux.intel.com>
Description:
		In some platforms, a single USB port is shared between a USB host
		controller and a device controller. A USB mux driver is needed to
		handle the port mux. Read-only attribute "name" shows the name of
		the port mux device. "state" attribute shows and stores the mux
		state.
		For read:
		'peripheral' - mux switched to PERIPHERAL controller;
		'host'       - mux switched to HOST controller.
		For write:
		'peripheral' - mux will be switched to PERIPHERAL controller;
		'host'       - mux will be switched to HOST controller.
